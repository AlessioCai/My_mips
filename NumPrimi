#Controlla se i numeri forniti sono primi o meno, salva tra i risultati solo i numeri primi
.data 0x10010000
Numeri: .word 2038074503, 3, 42, 1087, 85 #Numeri

.data 0x10010120
Risultati: .space 20 #risultati

.text
Main:
	la $s1, Risultati
	la $s2, Numeri
	li $s3, 0x10010014 #indirizzo di fine area di memoria dei numeri
Main_loop:
	lw $s0, ($s2)  #s0 = numero
	move $a0, $s0 #metto in a0 il numero da controllare
	jal Check_Primo
	bne $v0, $zero, Nuovo_Numero
N_Primo:	
	sw $s0, ($s1)
	addiu $s1, $s1, 4
Nuovo_Numero:
 	addiu $s2, $s2, 4
 	bne $s2, $s3, Main_loop   
	j End

Check_Primo: 
#dividi per due, trovi radice, loop da 3 a radice con incrementi di 2
	li $t0, 2
	div $a0, $t0
	mfhi $t0
	beq $t0, $zero, Non_Primo #se divisibile per due, non è primo
	mtc1 $a0, $f0
	cvt.s.w $f0, $f0
	sqrt.s $f0, $f0
	cvt.w.s $f0, $f0
	mfc1 $t2, $f0 # in t2 ho la radice di n intera
	li $t1, 3
	blt $t2, $t1, Primo #il loop funziona per tutto tranne 3, lo includo così. Tutti i numeri dispari con radice minore di 3 sono primi
Loop_Primi:
	div $a0, $t1
	mfhi $t0
	beq $t0, $zero, Non_Primo #se N divisibile, non è primo
	addi $t1, $t1, 2
	ble $t1, $t2, Loop_Primi #controllo tutti i numeri dispari <= della radice di N
	Primo: 
	add $v0, $zero, $zero
	jr $ra
	Non_Primo:	
	addi $v0, $zero, 1
	jr $ra

    
End: j End

